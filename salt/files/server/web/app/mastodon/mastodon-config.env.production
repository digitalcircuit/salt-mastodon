# This is a sample configuration file. You can generate your configuration
# with the `bundle exec rails mastodon:setup` interactive setup wizard, but to customize
# your setup even further, you'll need to edit it manually. This sample does
# not demonstrate all available configuration options. Please look at
# https://docs.joinmastodon.org/admin/config/ for the full documentation.

# Note that this file accepts slightly different syntax depending on whether
# you are using `docker-compose` or not. In particular, if you use
# `docker-compose`, the value of each declared variable will be taken verbatim,
# including surrounding quotes.
# See: https://github.com/mastodon/mastodon/issues/16895

# Federation
# ----------
# This identifies your server and cannot be changed safely later
# ----------
LOCAL_DOMAIN={{ salt['pillar.get']('server:hostnames:cert-primary:root') }}

# Redis
# -----
REDIS_HOST=localhost
REDIS_PORT=6379

# PostgreSQL
# ----------
DB_HOST=/var/run/postgresql
DB_USER={{ salt['pillar.get']('server:web:app:mastodon:database:username', 'mastodon') }}
DB_NAME={{ salt['pillar.get']('server:web:app:mastodon:database:name', 'mastodon_production') }}
DB_PASS={{ salt['pillar.get']('server:web:app:mastodon:database:password') }}
DB_PORT=5432

# Elasticsearch (optional)
# ------------------------
ES_ENABLED=false
ES_HOST=localhost
ES_PORT=9200
# Authentication for ES (optional)
ES_USER=elastic
ES_PASS=password

# Secrets
# -------
# Make sure to use `bundle exec rails secret` to generate secrets
# -------
SECRET_KEY_BASE={{ salt['pillar.get']('server:web:app:mastodon:secrets:secret_key_base') }}
OTP_SECRET={{ salt['pillar.get']('server:web:app:mastodon:secrets:otp_secret') }}
#
# Extra secrets not yet mentioned in "mastodon-config.env.production.sample"
ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY={{ salt['pillar.get']('server:web:app:mastodon:secrets:active_record:encryption_deterministic_key') }}
ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT={{ salt['pillar.get']('server:web:app:mastodon:secrets:active_record:encryption_key_derivation_salt') }}
ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY={{ salt['pillar.get']('server:web:app:mastodon:secrets:active_record:encryption_primary_key') }}

# Web Push
# --------
# Generate with `bundle exec rails mastodon:webpush:generate_vapid_key`
# --------
VAPID_PRIVATE_KEY={{ salt['pillar.get']('server:web:app:mastodon:web_push:vapid_private_key') }}
VAPID_PUBLIC_KEY={{ salt['pillar.get']('server:web:app:mastodon:web_push:vapid_public_key') }}

# Sending mail
# ------------
SMTP_SERVER={{ salt['pillar.get']('server:web:app:mastodon:mail:smtp_server') }}
SMTP_PORT={{ salt['pillar.get']('server:web:app:mastodon:mail:smtp_port', '587') }}
SMTP_LOGIN={{ salt['pillar.get']('server:web:app:mastodon:mail:smtp_username') }}
SMTP_PASSWORD={{ salt['pillar.get']('server:web:app:mastodon:mail:smtp_password') }}
SMTP_FROM_ADDRESS={{ salt['pillar.get']('server:web:app:mastodon:mail:smtp_from_address') }}
# ...from configuration wizard
SMTP_AUTH_METHOD=plain
SMTP_OPENSSL_VERIFY_MODE=none
SMTP_ENABLE_STARTTLS=auto

# File storage (optional)
# -----------------------
S3_ENABLED=true
S3_BUCKET={{ salt['pillar.get']('server:web:app:mastodon:object_storage:name', 'mastodon-media') }}
AWS_ACCESS_KEY_ID={{ salt['pillar.get']('server:web:app:mastodon:object_storage:access_key_id') }}
AWS_SECRET_ACCESS_KEY={{ salt['pillar.get']('server:web:app:mastodon:object_storage:secret_access_key') }}
S3_ALIAS_HOST={{ salt['pillar.get']('server:hostnames:cert-primary:files') }}
# Additional necessary settings
# See https://thomas-leister.de/en/mastodon-s3-media-storage/
S3_HOSTNAME={{ salt['pillar.get']('server:web:app:mastodon:object_storage:hostname') }}
S3_REGION={{ salt['pillar.get']('server:web:app:mastodon:object_storage:region') }}
S3_ENDPOINT={{ salt['pillar.get']('server:web:app:mastodon:object_storage:endpoint') }}
S3_PROTOCOL=https
# Some providers, e.g. Backblaze B2, require higher timeouts
# See https://mstdn.thms.uk/@michael/109460725040960925
# And https://www.reddit.com/r/Mastodon/comments/zliy3x/backblaze_b2_cloud_storage/
S3_READ_TIMEOUT=30

# IP and session retention
# -----------------------
# Make sure to modify the scheduling of ip_cleanup_scheduler in config/sidekiq.yml
# to be less than daily if you lower IP_RETENTION_PERIOD below two days (172800).
# -----------------------
# Keep default
#IP_RETENTION_PERIOD=31556952
#SESSION_RETENTION_PERIOD=31556952

# Additional configuration
{% if salt['pillar.get']('server:web:app:mastodon:single_user_mode', False) == True -%}
SINGLE_USER_MODE=true
{%- else -%}
SINGLE_USER_MODE=false
{%- endif %}
